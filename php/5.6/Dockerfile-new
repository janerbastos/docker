# =============================
# Etapa 1: Build
# =============================
FROM php:5.6-fpm-alpine as builder

# Dependências para compilar extensões
RUN apk add --no-cache --virtual .build-deps \
    $PHPIZE_DEPS \
    zlib-dev \
    libzip-dev \
    icu-dev \
    freetype-dev \
    libjpeg-turbo-dev \
    libpng-dev \
    libwebp-dev \
    libmcrypt-dev \
    gettext-dev

# Extensões PHP
RUN docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp \
    && docker-php-ext-install \
        gd \
        intl \
        gettext \
        mysqli \
        pdo \
        pdo_pgsql \
        pdo_mysql \
        opcache \
        exif \
        zip \
        mcrypt

# Composer (copiado na etapa final)
# Instala o Composer (versão compatível com Laravel 4.2)
RUN php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && \
    php composer-setup.php --version=1.10.17 && \
    php -r "unlink('composer-setup.php');" && \
    mv composer.phar /usr/local/bin/composer

# =============================
# Etapa 2: Final
# =============================
FROM php:5.6-fpm-alpine

ARG user=adminsite
ARG uid=1000

# Dependências em tempo de execução
RUN apk add --no-cache \
    nginx \
    supervisor \
    msmtp \
    wget \
    procps \
    shadow \
    libzip \
    libpng \
    libjpeg-turbo \
    libwebp \
    freetype \
    icu \
    postgresql-dev \
    libmcrypt \
    gettext \
    perl

# Copia PHP já com extensões compiladas da imagem builder
COPY --from=builder /usr/local/lib/php/extensions /usr/local/lib/php/extensions
COPY --from=builder /usr/local/bin/composer /usr/local/bin/composer

# Usuário opcional (se for rodar como não-root)
RUN adduser -D -u ${uid} ${user}

# Configuração opcional
# COPY ./nginx.conf /etc/nginx/nginx.conf
# COPY ./supervisord.conf /etc/supervisord.conf

# Porta padrão do Nginx
EXPOSE 80

CMD ["/usr/sbin/supervisord", "-c", "/etc/supervisord.conf"]
