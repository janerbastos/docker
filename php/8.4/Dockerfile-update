# Build stage
FROM php:8.4-fpm-alpine3.20 AS builder

# Install dependencies
RUN apk add --no-cache \
    msmtp \
    perl \
    wget \
    procps \
    shadow \
    libzip \
    libpng \
    libjpeg-turbo \
    libwebp \
    freetype \
    icu \
    icu-data-full \
    php82-pgsql

RUN apk add --no-cache --virtual .build-deps \
    icu-dev \
    zlib-dev \
    g++ \
    make \
    autoconf \
    libzip-dev \
    libpng-dev \
    libwebp-dev \
    libjpeg-turbo-dev \
    freetype-dev \
    libpq-dev && \
    docker-php-ext-configure gd --enable-gd --with-freetype --with-jpeg --with-webp && \
    docker-php-ext-install \
        gd \
        mysqli \
        pdo \
        pdo_mysql \
        pgsql \
        pdo_pgsql \
        intl \
        opcache \
        exif \
        zip && \
    apk del .build-deps && \
    rm -rf /usr/src/php*



# Runtime stage
FROM php:8.4-fpm-alpine3.20

# Create system users
RUN addgroup -g 1000 -S www && \
    adduser -u 1000 -S -G www www && \
    addgroup -g 1001 -S nginx && \
    adduser -u 1001 -S -G nginx nginx && \
    addgroup -g 1002 -S supervisor && \
    adduser -u 1002 -S -G supervisor supervisor

# Install runtime dependencies
RUN apk add --no-cache \
    msmtp \
    libzip \
    libpng \
    libjpeg-turbo \
    libwebp \
    freetype \
    icu \
    icu-data-full \
    php82-pgsql \
    nginx \
    supervisor

# Install Composer
COPY --from=composer:2 /usr/bin/composer /usr/local/bin/composer

# Copy PHP extensions from builder
COPY --from=builder /usr/local/etc/php/conf.d /usr/local/etc/php/conf.d
COPY --from=builder /usr/local/lib/php/extensions /usr/local/lib/php/extensions

# Configure working directory
WORKDIR /var/www

# Copy Laravel application
COPY . .

# Set permissions
RUN chown -R www:www /var/www && \
    chown -R nginx:nginx /var/lib/nginx && \
    chown -R supervisor:supervisor /var/log/supervisor

# Expose ports
EXPOSE 8000

# Health check, testa o estado vida do container
HEALTHCHECK --interval=30s --timeout=3s \
    CMD curl -f http://localhost:8000 || exit 1

# Entrypoint will be configured in docker-compose
ENTRYPOINT ["/usr/bin/supervisord", "-c", "/etc/supervisor/supervisord.conf"]